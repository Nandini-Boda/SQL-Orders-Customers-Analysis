----BASICS
SELECT Item,COUNT(ITEM) AS TOTAL_ITEMS FROM Orders
WHERE YEAR(DATE)=2020
GROUP BY Item
HAVING COUNT(ITEM)>5
ORDER BY ITEM 
--JOINS
SELECT O.CustomerID,O.Item,R.Restaurant_Name,P.Payment_Method FROM Orders AS O
LEFT JOIN Restaurants AS R
ON O.Restaurant_ID=R.Restaurant_ID
LEFT JOIN Payment AS P
ON O.Payment_Type=P.ID


---SUBQUERY
SELECT MAX(TOTAL_COST) AS SECOND_HIGHEST_COST FROM Orders
WHERE Total_Cost<(SELECT MAX(TOTAL_COST) FROM Orders)


--AGGRIGATE FUNCTIONS
SELECT SUM(TOTAL_COST) AS TOTAL_INCOME  FROM Orders
SELECT AVG(TOTAL_COST) AS AVG_INCOME  FROM Orders
SELECT MAX(TOTAL_COST) AS MAX_INCOME  FROM Orders
SELECT MIN(TOTAL_COST) AS MIN_INCOME  FROM Orders

--VIEWS
CREATE VIEW ORDERS_VIEW AS
SELECT Item,Total_Cost
FROM Orders
WHERE Total_Cost>1000;

--RANKS
SELECT Item,Total_Cost,DENSE_RANK() OVER(PARTITION BY ITEM ORDER BY TOTAL_COST) AS RN
FROM Orders
